from aiogram import F, Router
from aiogram.types import Message, ReplyKeyboardRemove
from aiogram.filters import CommandStart, Command
import logging

import keyboards as kb

router = Router()

@router.message(CommandStart())
async def command_start(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç–∏–∫!", reply_markup=kb.main)
    logging.info(f"Username: {message.from_user.username}"
                 f"\nName: {message.from_user.first_name}"
                 f"\nID: {message.from_user.id}"
                 f"\nText: {message.text}")


@router.message(Command("info"))
async def info(message: Message):
    await message.answer(f"\nName: {message.from_user.first_name}"
                         f"\nID: {message.from_user.id}"
                         f"\nLanguage: {message.from_user.language_code}")
    logging.info(f"Username: {message.from_user.username}"
                 f"Name: {message.from_user.first_name}"
                 f"\nID: {message.from_user.id}"
                 f"\nLanguage: {message.from_user.language_code}")


@router.message(F.photo)
async def photo(message: Message):
    await message.answer_photo(message.photo[-1].file_id,
                               caption=f"–†–∞–∑–º–µ—Ä: {message.photo[-1].width}x{message.photo[-1].height}", )
    logging.info(f"Name: {message.from_user.username}"
                 f"\nID: {message.from_user.id}"
                 f"\nPhoto ID: {message.photo[-1].file_id}"
                 f"\nPhoto size: {message.photo[-1].width}x{message.photo[-1].height}")


@router.message(F.text == "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
async def settings(message: Message):
    await message.answer("–¢—ã –≤—ã–±—Ä–∞–ª –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, –¥–µ—Ä–∂–∏: ", reply_markup=kb.settings_menu)
    logging.info(f"Username: {message.from_user.username}"
                 f"\nName: {message.from_user.first_name}"
                 f"\nID: {message.from_user.id}"
                 f"\nText: {message.text}")


@router.message(F.text == "üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞")
async def support(message: Message):
    await message.answer("–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏: @support_bot\nEmail: support@example.com\n–¢–µ–ª–µ—Ñ–æ–Ω: +31 6 12345678"
                         "\nP.S –≠—Ç–æ –ø—Ä–æ—Å—Ç–æ –≤—ã–¥—É–º–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã, –Ω–µ —Å–æ–≤–µ—Ç—É—é –ø–æ –Ω–∏–º –ø–∏—Å–∞—Ç—å :)")
    logging.info(f"Username: {message.from_user.username}"
                 f"\nName: {message.from_user.first_name}"
                 f"\nID: {message.from_user.id}"
                 f"\nText: {message.text}")


@router.message(F.text == "üîô –í—ã—Ö–æ–¥")
async def exit_from_session(message: Message):
    await message.answer("–í—ã –≤—ã—à–ª–∏ –∏–∑ –º–µ–Ω—é.", reply_markup=ReplyKeyboardRemove())
    logging.info(f"Username: {message.from_user.username}"
                 f"\nName: {message.from_user.first_name}"
                 f"\nID: {message.from_user.id}"
                 f"\nText: {message.text}")


@router.message(F.text == "üåê –Ø–∑—ã–∫")
async def change_language(message: Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫: –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞,–†—É—Å—Å–∫–∏–π, English, Nederlands"
                         "\nP.S –≠—Ç–æ –æ–±—ã—á–Ω–∞—è –∑–∞—Ç—ã—á–∫–∞ —á—Ç–æ –±—ã –∫–Ω–æ–ø–∫–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–ª–∞, "
                         "—Ç—ã–∫–∞–π—Ç–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —è–∑—ã–∫ –≤—ã –Ω–µ —Å–º–µ–Ω–∏—Ç–µ :)")
    logging.info(f"Username: {message.from_user.username}"
                 f"\nName: {message.from_user.first_name}"
                 f"\nID: {message.from_user.id}"
                 f"\nText: {message.text}")


@router.message(F.text == "üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
async def notification(message: Message):
    await message.answer("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: –≤–∫–ª—é—á–µ–Ω—ã/–æ—Ç–∫–ª—é—á–µ–Ω—ã"
                         "P.S –Ø –Ω–µ –¥—É–º–∞—é —á—Ç–æ –º–Ω–µ –Ω—É–∂–Ω–æ –æ–±—ä—è—Å–Ω—è—Ç—å —á—Ç–æ —ç—Ç–æ –æ–±—ã—á–Ω–∞—è –∑–∞—Ç—ã—á–∫–∞... "
                         "\n–ù–æ! –Ø –æ–±—ä—è—Å–Ω—é..."
                         "\n–ò–ª–∏ –Ω–µ—Ç..."
                         "\n–ú–æ–∂–µ—Ç –≤—Å—ë —Ç–∞–∫–∏ –æ–±—ä—è—Å–Ω–∏—Ç—å?"
                         "\n–û–π –¥–∞ –Ω–µ, —Å–∞–º–∏ —Ä–∞–∑–±–µ—Ä—É—Ç—Å—è, –Ω–µ –≥–ª—É–ø—ã–µ –∂–µ :)")
    logging.info(f"Username: {message.from_user.username}"
                 f"\nName: {message.from_user.first_name}"
                 f"\nID: {message.from_user.id}"
                 f"\nText: {message.text}")

@router.message(F.text == "üîô –ù–∞–∑–∞–¥")
async def help_message(message: Message):
    await message.answer("–ù–∞–∑–∞–¥ —Ç–∞–∫ –Ω–∞–∑–∞–¥...", reply_markup=kb.main)
    logging.info(f"Username: {message.from_user.username}"
                 f"\nName: {message.from_user.first_name}"
                 f"\nID: {message.from_user.id}"
                 f"\nText: {message.text}")

